version: 6.5.{build}
branches:
  only:
  - master
configuration: Release
platform: Any CPU
environment:
  pfx_decrypt:
    secure: AHimXBh+X6BjzeQqH6XOj+E4njc5S4kxhacPvuR1aK0=
  pfx_pwd:
    secure: 8O5C6ksDG2epfcj92HlPPg==
before_build:
  - cmd: cd src
  - cmd: nuget restore
  - cmd: nuget install secure-file -ExcludeVersion
  - cmd: secure-file\tools\secure-file -decrypt dummy.data -secret %pfx_decrypt% -out NFETeam.pfx
  - ps: $psw = ConvertTo-SecureString $env:pfx_pwd -AsPlainText -Force
  - ps: $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
  - ps: $cert.Import("NFETeam.pfx", $psw, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable)
  - ps: $exportPrivateKeyInformation = $true
  - ps: $certXml = $cert.PrivateKey.ToXmlString($exportPrivateKeyInformation)
  - ps: $csp = New-Object System.Security.Cryptography.CspParameters
  - ps: $csp.KeyContainerName = VS_KEY_05B73E7374811DEA
  - ps: $csp.Flags = [System.Security.Cryptography.CspProviderFlags]::UseMachineKeyStore -bor [System.Security.Cryptography.CspProviderFlags]::NoPrompt
  - ps: $csp.KeyNumber = [System.Security.Cryptography.KeyNumber]::Signature
  - ps: $rsa = New-Object System.Security.Cryptography.RSACryptoServiceProvider $csp
  - ps: $rsa.FromXmlString($certXml)
  - ps: $rsa.Clear()
  - ps: Write-Output "Sucesfully imported $pfx into StrongName CSP store"
build:
  verbosity: quiet
after_build:
- cmd: cd C:\projects\nfirmwareeditor\src\out\
- cmd: del /q *.pdb, *.xml
artifacts:
- path: src\out
  name: NFirmwareEditor-v$(appveyor_build_version)
