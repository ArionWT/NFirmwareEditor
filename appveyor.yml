version: 6.5.{build}
branches:
  only:
  - master
configuration: Release
platform: Any CPU
environment:
  pfx_decrypt:
    secure: AHimXBh+X6BjzeQqH6XOj+E4njc5S4kxhacPvuR1aK0=
  pfx_pwd:
    secure: 8O5C6ksDG2epfcj92HlPPg==
before_build:
  - cmd >-
      cd src
      nuget restore
      nuget install secure-file -ExcludeVersion
      secure-file\tools\secure-file -decrypt dummy.data -secret %pfx_decrypt% -out NFETeam.pfx
  - ps: >-  
      $pfx = "NFETeam.pfx"
      $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
      $cert.Import($pfx, $env:pfx_pwd, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable)
      $exportPrivateKeyInformation = $true
      $certXml = $cert.PrivateKey.ToXmlString($exportPrivateKeyInformation)
      $csp = New-Object System.Security.Cryptography.CspParameters
      $csp.KeyContainerName = VS_KEY_05B73E7374811DEA
      $csp.Flags = [System.Security.Cryptography.CspProviderFlags]::UseMachineKeyStore -bor [System.Security.Cryptography.CspProviderFlags]::NoPrompt
      $csp.KeyNumber = [System.Security.Cryptography.KeyNumber]::Signature
      $rsa = New-Object System.Security.Cryptography.RSACryptoServiceProvider $csp
      $rsa.FromXmlString($certXml)
      $rsa.Clear()
      Write-Output "Sucesfully imported $pfx into StrongName CSP store"
build:
  verbosity: quiet
after_build:
- cmd: cd C:\projects\nfirmwareeditor\src\out\
- cmd: del /q *.pdb, *.xml
artifacts:
- path: src\out
  name: NFirmwareEditor-v$(appveyor_build_version)
